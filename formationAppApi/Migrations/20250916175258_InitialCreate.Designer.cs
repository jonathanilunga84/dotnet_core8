// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using formationAppApi.Data;

#nullable disable

namespace formationAppApi.Migrations
{
    [DbContext(typeof(MonDbContext))]
    [Migration("20250916175258_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("ApprenantCours", b =>
                {
                    b.Property<int>("ApprenantsInscritsId")
                        .HasColumnType("int");

                    b.Property<int>("CoursSuivisId")
                        .HasColumnType("int");

                    b.HasKey("ApprenantsInscritsId", "CoursSuivisId");

                    b.HasIndex("CoursSuivisId");

                    b.ToTable("ApprenantCours");
                });

            modelBuilder.Entity("formationAppApi.Models.Apprenant", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Adresse")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("DateNaissance")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Postnom")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Prenom")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Sexe")
                        .HasMaxLength(12)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("Telephone")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Apprenants");
                });

            modelBuilder.Entity("formationAppApi.Models.Cours", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<string>("DureeHeures")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.Property<string>("Titre")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Cours");
                });

            modelBuilder.Entity("formationAppApi.Models.Note", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ApprenantId")
                        .HasColumnType("int");

                    b.Property<string>("Commentaire")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("CoursId")
                        .HasColumnType("int");

                    b.Property<int>("Valeur")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ApprenantId");

                    b.HasIndex("CoursId");

                    b.ToTable("Notes");
                });

            modelBuilder.Entity("ApprenantCours", b =>
                {
                    b.HasOne("formationAppApi.Models.Apprenant", null)
                        .WithMany()
                        .HasForeignKey("ApprenantsInscritsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("formationAppApi.Models.Cours", null)
                        .WithMany()
                        .HasForeignKey("CoursSuivisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("formationAppApi.Models.Note", b =>
                {
                    b.HasOne("formationAppApi.Models.Apprenant", "Apprenant")
                        .WithMany()
                        .HasForeignKey("ApprenantId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("formationAppApi.Models.Cours", "Cours")
                        .WithMany("Notes")
                        .HasForeignKey("CoursId");

                    b.Navigation("Apprenant");

                    b.Navigation("Cours");
                });

            modelBuilder.Entity("formationAppApi.Models.Cours", b =>
                {
                    b.Navigation("Notes");
                });
#pragma warning restore 612, 618
        }
    }
}
